// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: astarteplatform/msghub/astarte_message.proto
// Protobuf C++ Version: 5.29.0

#include "astarteplatform/msghub/astarte_message.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace astarteplatform {
namespace msghub {

inline constexpr AstarteMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        interface_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{nullptr},
        payload_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR AstarteMessage::AstarteMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AstarteMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AstarteMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AstarteMessageDefaultTypeInternal() {}
  union {
    AstarteMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AstarteMessageDefaultTypeInternal _AstarteMessage_default_instance_;

inline constexpr MessageHubEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : event_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR MessageHubEvent::MessageHubEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MessageHubEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageHubEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageHubEventDefaultTypeInternal() {}
  union {
    MessageHubEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageHubEventDefaultTypeInternal _MessageHubEvent_default_instance_;
}  // namespace msghub
}  // namespace astarteplatform
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_astarteplatform_2fmsghub_2fastarte_5fmessage_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_astarteplatform_2fmsghub_2fastarte_5fmessage_2eproto = nullptr;
const ::uint32_t
    TableStruct_astarteplatform_2fmsghub_2fastarte_5fmessage_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::astarteplatform::msghub::MessageHubEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::astarteplatform::msghub::MessageHubEvent, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::astarteplatform::msghub::MessageHubEvent, _impl_.event_),
        PROTOBUF_FIELD_OFFSET(::astarteplatform::msghub::AstarteMessage, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::astarteplatform::msghub::AstarteMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::astarteplatform::msghub::AstarteMessage, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::astarteplatform::msghub::AstarteMessage, _impl_.interface_name_),
        PROTOBUF_FIELD_OFFSET(::astarteplatform::msghub::AstarteMessage, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::astarteplatform::msghub::AstarteMessage, _impl_.timestamp_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::astarteplatform::msghub::AstarteMessage, _impl_.payload_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::astarteplatform::msghub::MessageHubEvent)},
        {11, 26, -1, sizeof(::astarteplatform::msghub::AstarteMessage)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::astarteplatform::msghub::_MessageHubEvent_default_instance_._instance,
    &::astarteplatform::msghub::_AstarteMessage_default_instance_._instance,
};
const char descriptor_table_protodef_astarteplatform_2fmsghub_2fastarte_5fmessage_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n,astarteplatform/msghub/astarte_message"
    ".proto\022\026astarteplatform.msghub\032\037google/p"
    "rotobuf/timestamp.proto\032)astarteplatform"
    "/msghub/astarte_data.proto\032.astarteplatf"
    "orm/msghub/message_hub_error.proto\"\217\001\n\017M"
    "essageHubEvent\0229\n\007message\030\001 \001(\0132&.astart"
    "eplatform.msghub.AstarteMessageH\000\0228\n\005err"
    "or\030\002 \001(\0132\'.astarteplatform.msghub.Messag"
    "eHubErrorH\000B\007\n\005event\"\372\002\n\016AstarteMessage\022"
    "\026\n\016interface_name\030\001 \001(\t\022\014\n\004path\030\002 \001(\t\0222\n"
    "\ttimestamp\030\003 \001(\0132\032.google.protobuf.Times"
    "tampH\001\210\001\001\022U\n\025datastream_individual\030\004 \001(\013"
    "24.astarteplatform.msghub.AstarteDatastr"
    "eamInidividualH\000\022L\n\021datastream_object\030\005 "
    "\001(\0132/.astarteplatform.msghub.AstarteData"
    "streamObjectH\000\022P\n\023property_individual\030\006 "
    "\001(\01321.astarteplatform.msghub.AstarteProp"
    "ertyIndividualH\000B\t\n\007payloadB\014\n\n_timestam"
    "pb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_astarteplatform_2fmsghub_2fastarte_5fmessage_2eproto_deps[3] =
    {
        &::descriptor_table_astarteplatform_2fmsghub_2fastarte_5fdata_2eproto,
        &::descriptor_table_astarteplatform_2fmsghub_2fmessage_5fhub_5ferror_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_astarteplatform_2fmsghub_2fastarte_5fmessage_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_astarteplatform_2fmsghub_2fastarte_5fmessage_2eproto = {
    false,
    false,
    729,
    descriptor_table_protodef_astarteplatform_2fmsghub_2fastarte_5fmessage_2eproto,
    "astarteplatform/msghub/astarte_message.proto",
    &descriptor_table_astarteplatform_2fmsghub_2fastarte_5fmessage_2eproto_once,
    descriptor_table_astarteplatform_2fmsghub_2fastarte_5fmessage_2eproto_deps,
    3,
    2,
    schemas,
    file_default_instances,
    TableStruct_astarteplatform_2fmsghub_2fastarte_5fmessage_2eproto::offsets,
    file_level_enum_descriptors_astarteplatform_2fmsghub_2fastarte_5fmessage_2eproto,
    file_level_service_descriptors_astarteplatform_2fmsghub_2fastarte_5fmessage_2eproto,
};
namespace astarteplatform {
namespace msghub {
// ===================================================================

class MessageHubEvent::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::astarteplatform::msghub::MessageHubEvent, _impl_._oneof_case_);
};

void MessageHubEvent::set_allocated_message(::astarteplatform::msghub::AstarteMessage* message) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_event();
  if (message) {
    ::google::protobuf::Arena* submessage_arena = message->GetArena();
    if (message_arena != submessage_arena) {
      message = ::google::protobuf::internal::GetOwnedMessage(message_arena, message, submessage_arena);
    }
    set_has_message();
    _impl_.event_.message_ = message;
  }
  // @@protoc_insertion_point(field_set_allocated:astarteplatform.msghub.MessageHubEvent.message)
}
void MessageHubEvent::set_allocated_error(::astarteplatform::msghub::MessageHubError* error) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_event();
  if (error) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(error)->GetArena();
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(message_arena, error, submessage_arena);
    }
    set_has_error();
    _impl_.event_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:astarteplatform.msghub.MessageHubEvent.error)
}
void MessageHubEvent::clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (event_case() == kError) {
    if (GetArena() == nullptr) {
      delete _impl_.event_.error_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_.error_);
    }
    clear_has_event();
  }
}
MessageHubEvent::MessageHubEvent(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:astarteplatform.msghub.MessageHubEvent)
}
inline PROTOBUF_NDEBUG_INLINE MessageHubEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::astarteplatform::msghub::MessageHubEvent& from_msg)
      : event_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

MessageHubEvent::MessageHubEvent(
    ::google::protobuf::Arena* arena,
    const MessageHubEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MessageHubEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (event_case()) {
    case EVENT_NOT_SET:
      break;
      case kMessage:
        _impl_.event_.message_ = ::google::protobuf::Message::CopyConstruct<::astarteplatform::msghub::AstarteMessage>(arena, *from._impl_.event_.message_);
        break;
      case kError:
        _impl_.event_.error_ = ::google::protobuf::Message::CopyConstruct<::astarteplatform::msghub::MessageHubError>(arena, *from._impl_.event_.error_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:astarteplatform.msghub.MessageHubEvent)
}
inline PROTOBUF_NDEBUG_INLINE MessageHubEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : event_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void MessageHubEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MessageHubEvent::~MessageHubEvent() {
  // @@protoc_insertion_point(destructor:astarteplatform.msghub.MessageHubEvent)
  SharedDtor(*this);
}
inline void MessageHubEvent::SharedDtor(MessageLite& self) {
  MessageHubEvent& this_ = static_cast<MessageHubEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_event()) {
    this_.clear_event();
  }
  this_._impl_.~Impl_();
}

void MessageHubEvent::clear_event() {
// @@protoc_insertion_point(one_of_clear_start:astarteplatform.msghub.MessageHubEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (event_case()) {
    case kMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.event_.message_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_.message_);
      }
      break;
    }
    case kError: {
      if (GetArena() == nullptr) {
        delete _impl_.event_.error_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_.error_);
      }
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = EVENT_NOT_SET;
}


inline void* MessageHubEvent::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MessageHubEvent(arena);
}
constexpr auto MessageHubEvent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MessageHubEvent),
                                            alignof(MessageHubEvent));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MessageHubEvent::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MessageHubEvent_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MessageHubEvent::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MessageHubEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MessageHubEvent::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MessageHubEvent>(), &MessageHubEvent::ByteSizeLong,
            &MessageHubEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MessageHubEvent, _impl_._cached_size_),
        false,
    },
    &MessageHubEvent::kDescriptorMethods,
    &descriptor_table_astarteplatform_2fmsghub_2fastarte_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MessageHubEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> MessageHubEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::astarteplatform::msghub::MessageHubEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .astarteplatform.msghub.AstarteMessage message = 1;
    {PROTOBUF_FIELD_OFFSET(MessageHubEvent, _impl_.event_.message_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .astarteplatform.msghub.MessageHubError error = 2;
    {PROTOBUF_FIELD_OFFSET(MessageHubEvent, _impl_.event_.error_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::astarteplatform::msghub::AstarteMessage>()},
    {::_pbi::TcParser::GetTable<::astarteplatform::msghub::MessageHubError>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MessageHubEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:astarteplatform.msghub.MessageHubEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_event();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MessageHubEvent::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MessageHubEvent& this_ = static_cast<const MessageHubEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MessageHubEvent::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MessageHubEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:astarteplatform.msghub.MessageHubEvent)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.event_case()) {
            case kMessage: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.event_.message_, this_._impl_.event_.message_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kError: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.event_.error_, this_._impl_.event_.error_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:astarteplatform.msghub.MessageHubEvent)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MessageHubEvent::ByteSizeLong(const MessageLite& base) {
          const MessageHubEvent& this_ = static_cast<const MessageHubEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MessageHubEvent::ByteSizeLong() const {
          const MessageHubEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:astarteplatform.msghub.MessageHubEvent)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.event_case()) {
            // .astarteplatform.msghub.AstarteMessage message = 1;
            case kMessage: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.event_.message_);
              break;
            }
            // .astarteplatform.msghub.MessageHubError error = 2;
            case kError: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.event_.error_);
              break;
            }
            case EVENT_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MessageHubEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MessageHubEvent*>(&to_msg);
  auto& from = static_cast<const MessageHubEvent&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:astarteplatform.msghub.MessageHubEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_event();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kMessage: {
        if (oneof_needs_init) {
          _this->_impl_.event_.message_ =
              ::google::protobuf::Message::CopyConstruct<::astarteplatform::msghub::AstarteMessage>(arena, *from._impl_.event_.message_);
        } else {
          _this->_impl_.event_.message_->MergeFrom(from._internal_message());
        }
        break;
      }
      case kError: {
        if (oneof_needs_init) {
          _this->_impl_.event_.error_ =
              ::google::protobuf::Message::CopyConstruct<::astarteplatform::msghub::MessageHubError>(arena, *from._impl_.event_.error_);
        } else {
          _this->_impl_.event_.error_->MergeFrom(from._internal_error());
        }
        break;
      }
      case EVENT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MessageHubEvent::CopyFrom(const MessageHubEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:astarteplatform.msghub.MessageHubEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MessageHubEvent::InternalSwap(MessageHubEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.event_, other->_impl_.event_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata MessageHubEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AstarteMessage::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AstarteMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AstarteMessage, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::astarteplatform::msghub::AstarteMessage, _impl_._oneof_case_);
};

void AstarteMessage::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void AstarteMessage::set_allocated_datastream_individual(::astarteplatform::msghub::AstarteDatastreamInidividual* datastream_individual) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (datastream_individual) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(datastream_individual)->GetArena();
    if (message_arena != submessage_arena) {
      datastream_individual = ::google::protobuf::internal::GetOwnedMessage(message_arena, datastream_individual, submessage_arena);
    }
    set_has_datastream_individual();
    _impl_.payload_.datastream_individual_ = datastream_individual;
  }
  // @@protoc_insertion_point(field_set_allocated:astarteplatform.msghub.AstarteMessage.datastream_individual)
}
void AstarteMessage::clear_datastream_individual() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kDatastreamIndividual) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.datastream_individual_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.datastream_individual_);
    }
    clear_has_payload();
  }
}
void AstarteMessage::set_allocated_datastream_object(::astarteplatform::msghub::AstarteDatastreamObject* datastream_object) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (datastream_object) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(datastream_object)->GetArena();
    if (message_arena != submessage_arena) {
      datastream_object = ::google::protobuf::internal::GetOwnedMessage(message_arena, datastream_object, submessage_arena);
    }
    set_has_datastream_object();
    _impl_.payload_.datastream_object_ = datastream_object;
  }
  // @@protoc_insertion_point(field_set_allocated:astarteplatform.msghub.AstarteMessage.datastream_object)
}
void AstarteMessage::clear_datastream_object() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kDatastreamObject) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.datastream_object_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.datastream_object_);
    }
    clear_has_payload();
  }
}
void AstarteMessage::set_allocated_property_individual(::astarteplatform::msghub::AstartePropertyIndividual* property_individual) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (property_individual) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(property_individual)->GetArena();
    if (message_arena != submessage_arena) {
      property_individual = ::google::protobuf::internal::GetOwnedMessage(message_arena, property_individual, submessage_arena);
    }
    set_has_property_individual();
    _impl_.payload_.property_individual_ = property_individual;
  }
  // @@protoc_insertion_point(field_set_allocated:astarteplatform.msghub.AstarteMessage.property_individual)
}
void AstarteMessage::clear_property_individual() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kPropertyIndividual) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.property_individual_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.property_individual_);
    }
    clear_has_payload();
  }
}
AstarteMessage::AstarteMessage(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:astarteplatform.msghub.AstarteMessage)
}
inline PROTOBUF_NDEBUG_INLINE AstarteMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::astarteplatform::msghub::AstarteMessage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        interface_name_(arena, from.interface_name_),
        path_(arena, from.path_),
        payload_{},
        _oneof_case_{from._oneof_case_[0]} {}

AstarteMessage::AstarteMessage(
    ::google::protobuf::Arena* arena,
    const AstarteMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AstarteMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.timestamp_)
                        : nullptr;
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kDatastreamIndividual:
        _impl_.payload_.datastream_individual_ = ::google::protobuf::Message::CopyConstruct<::astarteplatform::msghub::AstarteDatastreamInidividual>(arena, *from._impl_.payload_.datastream_individual_);
        break;
      case kDatastreamObject:
        _impl_.payload_.datastream_object_ = ::google::protobuf::Message::CopyConstruct<::astarteplatform::msghub::AstarteDatastreamObject>(arena, *from._impl_.payload_.datastream_object_);
        break;
      case kPropertyIndividual:
        _impl_.payload_.property_individual_ = ::google::protobuf::Message::CopyConstruct<::astarteplatform::msghub::AstartePropertyIndividual>(arena, *from._impl_.payload_.property_individual_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:astarteplatform.msghub.AstarteMessage)
}
inline PROTOBUF_NDEBUG_INLINE AstarteMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        interface_name_(arena),
        path_(arena),
        payload_{},
        _oneof_case_{} {}

inline void AstarteMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
AstarteMessage::~AstarteMessage() {
  // @@protoc_insertion_point(destructor:astarteplatform.msghub.AstarteMessage)
  SharedDtor(*this);
}
inline void AstarteMessage::SharedDtor(MessageLite& self) {
  AstarteMessage& this_ = static_cast<AstarteMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.interface_name_.Destroy();
  this_._impl_.path_.Destroy();
  delete this_._impl_.timestamp_;
  if (this_.has_payload()) {
    this_.clear_payload();
  }
  this_._impl_.~Impl_();
}

void AstarteMessage::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:astarteplatform.msghub.AstarteMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_case()) {
    case kDatastreamIndividual: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.datastream_individual_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.datastream_individual_);
      }
      break;
    }
    case kDatastreamObject: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.datastream_object_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.datastream_object_);
      }
      break;
    }
    case kPropertyIndividual: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.property_individual_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.property_individual_);
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


inline void* AstarteMessage::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AstarteMessage(arena);
}
constexpr auto AstarteMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AstarteMessage),
                                            alignof(AstarteMessage));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AstarteMessage::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AstarteMessage_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AstarteMessage::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AstarteMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AstarteMessage::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AstarteMessage>(), &AstarteMessage::ByteSizeLong,
            &AstarteMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AstarteMessage, _impl_._cached_size_),
        false,
    },
    &AstarteMessage::kDescriptorMethods,
    &descriptor_table_astarteplatform_2fmsghub_2fastarte_5fmessage_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AstarteMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 4, 64, 2> AstarteMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AstarteMessage, _impl_._has_bits_),
    0, // no _extensions_
    6, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::astarteplatform::msghub::AstarteMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string interface_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AstarteMessage, _impl_.interface_name_)}},
    // string path = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AstarteMessage, _impl_.path_)}},
    // optional .google.protobuf.Timestamp timestamp = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(AstarteMessage, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string interface_name = 1;
    {PROTOBUF_FIELD_OFFSET(AstarteMessage, _impl_.interface_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string path = 2;
    {PROTOBUF_FIELD_OFFSET(AstarteMessage, _impl_.path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .google.protobuf.Timestamp timestamp = 3;
    {PROTOBUF_FIELD_OFFSET(AstarteMessage, _impl_.timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .astarteplatform.msghub.AstarteDatastreamInidividual datastream_individual = 4;
    {PROTOBUF_FIELD_OFFSET(AstarteMessage, _impl_.payload_.datastream_individual_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .astarteplatform.msghub.AstarteDatastreamObject datastream_object = 5;
    {PROTOBUF_FIELD_OFFSET(AstarteMessage, _impl_.payload_.datastream_object_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .astarteplatform.msghub.AstartePropertyIndividual property_individual = 6;
    {PROTOBUF_FIELD_OFFSET(AstarteMessage, _impl_.payload_.property_individual_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::astarteplatform::msghub::AstarteDatastreamInidividual>()},
    {::_pbi::TcParser::GetTable<::astarteplatform::msghub::AstarteDatastreamObject>()},
    {::_pbi::TcParser::GetTable<::astarteplatform::msghub::AstartePropertyIndividual>()},
  }}, {{
    "\45\16\4\0\0\0\0\0"
    "astarteplatform.msghub.AstarteMessage"
    "interface_name"
    "path"
  }},
};

PROTOBUF_NOINLINE void AstarteMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:astarteplatform.msghub.AstarteMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.interface_name_.ClearToEmpty();
  _impl_.path_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.timestamp_ != nullptr);
    _impl_.timestamp_->Clear();
  }
  clear_payload();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AstarteMessage::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AstarteMessage& this_ = static_cast<const AstarteMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AstarteMessage::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AstarteMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:astarteplatform.msghub.AstarteMessage)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string interface_name = 1;
          if (!this_._internal_interface_name().empty()) {
            const std::string& _s = this_._internal_interface_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "astarteplatform.msghub.AstarteMessage.interface_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string path = 2;
          if (!this_._internal_path().empty()) {
            const std::string& _s = this_._internal_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "astarteplatform.msghub.AstarteMessage.path");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .google.protobuf.Timestamp timestamp = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
                stream);
          }

          switch (this_.payload_case()) {
            case kDatastreamIndividual: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.payload_.datastream_individual_, this_._impl_.payload_.datastream_individual_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kDatastreamObject: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.payload_.datastream_object_, this_._impl_.payload_.datastream_object_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPropertyIndividual: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.payload_.property_individual_, this_._impl_.payload_.property_individual_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:astarteplatform.msghub.AstarteMessage)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AstarteMessage::ByteSizeLong(const MessageLite& base) {
          const AstarteMessage& this_ = static_cast<const AstarteMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AstarteMessage::ByteSizeLong() const {
          const AstarteMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:astarteplatform.msghub.AstarteMessage)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string interface_name = 1;
            if (!this_._internal_interface_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_interface_name());
            }
            // string path = 2;
            if (!this_._internal_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_path());
            }
          }
           {
            // optional .google.protobuf.Timestamp timestamp = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
            }
          }
          switch (this_.payload_case()) {
            // .astarteplatform.msghub.AstarteDatastreamInidividual datastream_individual = 4;
            case kDatastreamIndividual: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.datastream_individual_);
              break;
            }
            // .astarteplatform.msghub.AstarteDatastreamObject datastream_object = 5;
            case kDatastreamObject: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.datastream_object_);
              break;
            }
            // .astarteplatform.msghub.AstartePropertyIndividual property_individual = 6;
            case kPropertyIndividual: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.property_individual_);
              break;
            }
            case PAYLOAD_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AstarteMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AstarteMessage*>(&to_msg);
  auto& from = static_cast<const AstarteMessage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:astarteplatform.msghub.AstarteMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_interface_name().empty()) {
    _this->_internal_set_interface_name(from._internal_interface_name());
  }
  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
    if (_this->_impl_.timestamp_ == nullptr) {
      _this->_impl_.timestamp_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.timestamp_);
    } else {
      _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kDatastreamIndividual: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.datastream_individual_ =
              ::google::protobuf::Message::CopyConstruct<::astarteplatform::msghub::AstarteDatastreamInidividual>(arena, *from._impl_.payload_.datastream_individual_);
        } else {
          _this->_impl_.payload_.datastream_individual_->MergeFrom(from._internal_datastream_individual());
        }
        break;
      }
      case kDatastreamObject: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.datastream_object_ =
              ::google::protobuf::Message::CopyConstruct<::astarteplatform::msghub::AstarteDatastreamObject>(arena, *from._impl_.payload_.datastream_object_);
        } else {
          _this->_impl_.payload_.datastream_object_->MergeFrom(from._internal_datastream_object());
        }
        break;
      }
      case kPropertyIndividual: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.property_individual_ =
              ::google::protobuf::Message::CopyConstruct<::astarteplatform::msghub::AstartePropertyIndividual>(arena, *from._impl_.payload_.property_individual_);
        } else {
          _this->_impl_.payload_.property_individual_->MergeFrom(from._internal_property_individual());
        }
        break;
      }
      case PAYLOAD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AstarteMessage::CopyFrom(const AstarteMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:astarteplatform.msghub.AstarteMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AstarteMessage::InternalSwap(AstarteMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.interface_name_, &other->_impl_.interface_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  swap(_impl_.timestamp_, other->_impl_.timestamp_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata AstarteMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace msghub
}  // namespace astarteplatform
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_astarteplatform_2fmsghub_2fastarte_5fmessage_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
