// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: astarteplatform/msghub/interface.proto
// Protobuf C++ Version: 5.29.0

#ifndef astarteplatform_2fmsghub_2finterface_2eproto_2epb_2eh
#define astarteplatform_2fmsghub_2finterface_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_astarteplatform_2fmsghub_2finterface_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_astarteplatform_2fmsghub_2finterface_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_astarteplatform_2fmsghub_2finterface_2eproto;
namespace astarteplatform {
namespace msghub {
class InterfaceName;
struct InterfaceNameDefaultTypeInternal;
extern InterfaceNameDefaultTypeInternal _InterfaceName_default_instance_;
class InterfacesJson;
struct InterfacesJsonDefaultTypeInternal;
extern InterfacesJsonDefaultTypeInternal _InterfacesJson_default_instance_;
class InterfacesName;
struct InterfacesNameDefaultTypeInternal;
extern InterfacesNameDefaultTypeInternal _InterfacesName_default_instance_;
}  // namespace msghub
}  // namespace astarteplatform
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace astarteplatform {
namespace msghub {
enum Ownership : int {
  DEVICE = 0,
  SERVER = 1,
  Ownership_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Ownership_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Ownership_IsValid(int value);
extern const uint32_t Ownership_internal_data_[];
constexpr Ownership Ownership_MIN = static_cast<Ownership>(0);
constexpr Ownership Ownership_MAX = static_cast<Ownership>(1);
constexpr int Ownership_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
Ownership_descriptor();
template <typename T>
const std::string& Ownership_Name(T value) {
  static_assert(std::is_same<T, Ownership>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Ownership_Name().");
  return Ownership_Name(static_cast<Ownership>(value));
}
template <>
inline const std::string& Ownership_Name(Ownership value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Ownership_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool Ownership_Parse(absl::string_view name, Ownership* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ownership>(
      Ownership_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class InterfacesName final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:astarteplatform.msghub.InterfacesName) */ {
 public:
  inline InterfacesName() : InterfacesName(nullptr) {}
  ~InterfacesName() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InterfacesName* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InterfacesName));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InterfacesName(
      ::google::protobuf::internal::ConstantInitialized);

  inline InterfacesName(const InterfacesName& from) : InterfacesName(nullptr, from) {}
  inline InterfacesName(InterfacesName&& from) noexcept
      : InterfacesName(nullptr, std::move(from)) {}
  inline InterfacesName& operator=(const InterfacesName& from) {
    CopyFrom(from);
    return *this;
  }
  inline InterfacesName& operator=(InterfacesName&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InterfacesName& default_instance() {
    return *internal_default_instance();
  }
  static inline const InterfacesName* internal_default_instance() {
    return reinterpret_cast<const InterfacesName*>(
        &_InterfacesName_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(InterfacesName& a, InterfacesName& b) { a.Swap(&b); }
  inline void Swap(InterfacesName* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InterfacesName* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InterfacesName* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InterfacesName>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InterfacesName& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InterfacesName& from) { InterfacesName::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InterfacesName* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "astarteplatform.msghub.InterfacesName"; }

 protected:
  explicit InterfacesName(::google::protobuf::Arena* arena);
  InterfacesName(::google::protobuf::Arena* arena, const InterfacesName& from);
  InterfacesName(::google::protobuf::Arena* arena, InterfacesName&& from) noexcept
      : InterfacesName(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNamesFieldNumber = 1,
  };
  // repeated string names = 1;
  int names_size() const;
  private:
  int _internal_names_size() const;

  public:
  void clear_names() ;
  const std::string& names(int index) const;
  std::string* mutable_names(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_names(int index, Arg_&& value, Args_... args);
  std::string* add_names();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_names(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_names();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_names();

  public:
  // @@protoc_insertion_point(class_scope:astarteplatform.msghub.InterfacesName)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      51, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InterfacesName& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> names_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_astarteplatform_2fmsghub_2finterface_2eproto;
};
// -------------------------------------------------------------------

class InterfacesJson final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:astarteplatform.msghub.InterfacesJson) */ {
 public:
  inline InterfacesJson() : InterfacesJson(nullptr) {}
  ~InterfacesJson() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InterfacesJson* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InterfacesJson));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InterfacesJson(
      ::google::protobuf::internal::ConstantInitialized);

  inline InterfacesJson(const InterfacesJson& from) : InterfacesJson(nullptr, from) {}
  inline InterfacesJson(InterfacesJson&& from) noexcept
      : InterfacesJson(nullptr, std::move(from)) {}
  inline InterfacesJson& operator=(const InterfacesJson& from) {
    CopyFrom(from);
    return *this;
  }
  inline InterfacesJson& operator=(InterfacesJson&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InterfacesJson& default_instance() {
    return *internal_default_instance();
  }
  static inline const InterfacesJson* internal_default_instance() {
    return reinterpret_cast<const InterfacesJson*>(
        &_InterfacesJson_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(InterfacesJson& a, InterfacesJson& b) { a.Swap(&b); }
  inline void Swap(InterfacesJson* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InterfacesJson* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InterfacesJson* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InterfacesJson>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InterfacesJson& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InterfacesJson& from) { InterfacesJson::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InterfacesJson* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "astarteplatform.msghub.InterfacesJson"; }

 protected:
  explicit InterfacesJson(::google::protobuf::Arena* arena);
  InterfacesJson(::google::protobuf::Arena* arena, const InterfacesJson& from);
  InterfacesJson(::google::protobuf::Arena* arena, InterfacesJson&& from) noexcept
      : InterfacesJson(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInterfacesJsonFieldNumber = 1,
  };
  // repeated string interfaces_json = 1;
  int interfaces_json_size() const;
  private:
  int _internal_interfaces_json_size() const;

  public:
  void clear_interfaces_json() ;
  const std::string& interfaces_json(int index) const;
  std::string* mutable_interfaces_json(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_interfaces_json(int index, Arg_&& value, Args_... args);
  std::string* add_interfaces_json();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_interfaces_json(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& interfaces_json() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_interfaces_json();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_interfaces_json() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_interfaces_json();

  public:
  // @@protoc_insertion_point(class_scope:astarteplatform.msghub.InterfacesJson)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InterfacesJson& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> interfaces_json_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_astarteplatform_2fmsghub_2finterface_2eproto;
};
// -------------------------------------------------------------------

class InterfaceName final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:astarteplatform.msghub.InterfaceName) */ {
 public:
  inline InterfaceName() : InterfaceName(nullptr) {}
  ~InterfaceName() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InterfaceName* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InterfaceName));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InterfaceName(
      ::google::protobuf::internal::ConstantInitialized);

  inline InterfaceName(const InterfaceName& from) : InterfaceName(nullptr, from) {}
  inline InterfaceName(InterfaceName&& from) noexcept
      : InterfaceName(nullptr, std::move(from)) {}
  inline InterfaceName& operator=(const InterfaceName& from) {
    CopyFrom(from);
    return *this;
  }
  inline InterfaceName& operator=(InterfaceName&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InterfaceName& default_instance() {
    return *internal_default_instance();
  }
  static inline const InterfaceName* internal_default_instance() {
    return reinterpret_cast<const InterfaceName*>(
        &_InterfaceName_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(InterfaceName& a, InterfaceName& b) { a.Swap(&b); }
  inline void Swap(InterfaceName* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InterfaceName* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InterfaceName* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InterfaceName>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InterfaceName& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InterfaceName& from) { InterfaceName::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InterfaceName* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "astarteplatform.msghub.InterfaceName"; }

 protected:
  explicit InterfaceName(::google::protobuf::Arena* arena);
  InterfaceName(::google::protobuf::Arena* arena, const InterfaceName& from);
  InterfaceName(::google::protobuf::Arena* arena, InterfaceName&& from) noexcept
      : InterfaceName(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:astarteplatform.msghub.InterfaceName)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      49, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InterfaceName& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_astarteplatform_2fmsghub_2finterface_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// InterfacesJson

// repeated string interfaces_json = 1;
inline int InterfacesJson::_internal_interfaces_json_size() const {
  return _internal_interfaces_json().size();
}
inline int InterfacesJson::interfaces_json_size() const {
  return _internal_interfaces_json_size();
}
inline void InterfacesJson::clear_interfaces_json() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interfaces_json_.Clear();
}
inline std::string* InterfacesJson::add_interfaces_json() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_interfaces_json()->Add();
  // @@protoc_insertion_point(field_add_mutable:astarteplatform.msghub.InterfacesJson.interfaces_json)
  return _s;
}
inline const std::string& InterfacesJson::interfaces_json(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:astarteplatform.msghub.InterfacesJson.interfaces_json)
  return _internal_interfaces_json().Get(index);
}
inline std::string* InterfacesJson::mutable_interfaces_json(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:astarteplatform.msghub.InterfacesJson.interfaces_json)
  return _internal_mutable_interfaces_json()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void InterfacesJson::set_interfaces_json(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_interfaces_json()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:astarteplatform.msghub.InterfacesJson.interfaces_json)
}
template <typename Arg_, typename... Args_>
inline void InterfacesJson::add_interfaces_json(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_interfaces_json(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:astarteplatform.msghub.InterfacesJson.interfaces_json)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
InterfacesJson::interfaces_json() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:astarteplatform.msghub.InterfacesJson.interfaces_json)
  return _internal_interfaces_json();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
InterfacesJson::mutable_interfaces_json() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:astarteplatform.msghub.InterfacesJson.interfaces_json)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_interfaces_json();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
InterfacesJson::_internal_interfaces_json() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interfaces_json_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
InterfacesJson::_internal_mutable_interfaces_json() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.interfaces_json_;
}

// -------------------------------------------------------------------

// InterfacesName

// repeated string names = 1;
inline int InterfacesName::_internal_names_size() const {
  return _internal_names().size();
}
inline int InterfacesName::names_size() const {
  return _internal_names_size();
}
inline void InterfacesName::clear_names() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.names_.Clear();
}
inline std::string* InterfacesName::add_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_names()->Add();
  // @@protoc_insertion_point(field_add_mutable:astarteplatform.msghub.InterfacesName.names)
  return _s;
}
inline const std::string& InterfacesName::names(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:astarteplatform.msghub.InterfacesName.names)
  return _internal_names().Get(index);
}
inline std::string* InterfacesName::mutable_names(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:astarteplatform.msghub.InterfacesName.names)
  return _internal_mutable_names()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void InterfacesName::set_names(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_names()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:astarteplatform.msghub.InterfacesName.names)
}
template <typename Arg_, typename... Args_>
inline void InterfacesName::add_names(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_names(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:astarteplatform.msghub.InterfacesName.names)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
InterfacesName::names() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:astarteplatform.msghub.InterfacesName.names)
  return _internal_names();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
InterfacesName::mutable_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:astarteplatform.msghub.InterfacesName.names)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_names();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
InterfacesName::_internal_names() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.names_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
InterfacesName::_internal_mutable_names() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.names_;
}

// -------------------------------------------------------------------

// InterfaceName

// string name = 1;
inline void InterfaceName::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& InterfaceName::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:astarteplatform.msghub.InterfaceName.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterfaceName::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:astarteplatform.msghub.InterfaceName.name)
}
inline std::string* InterfaceName::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:astarteplatform.msghub.InterfaceName.name)
  return _s;
}
inline const std::string& InterfaceName::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void InterfaceName::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* InterfaceName::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* InterfaceName::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:astarteplatform.msghub.InterfaceName.name)
  return _impl_.name_.Release();
}
inline void InterfaceName::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:astarteplatform.msghub.InterfaceName.name)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace msghub
}  // namespace astarteplatform


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::astarteplatform::msghub::Ownership> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::astarteplatform::msghub::Ownership>() {
  return ::astarteplatform::msghub::Ownership_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // astarteplatform_2fmsghub_2finterface_2eproto_2epb_2eh
