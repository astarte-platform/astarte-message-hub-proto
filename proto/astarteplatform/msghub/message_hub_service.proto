/*
 * This file is part of Astarte.
 *
 * Copyright 2022 SECO Mind Srl
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

syntax = "proto3";

package astarteplatform.msghub;

import "google/protobuf/empty.proto";

import "astarteplatform/msghub/astarte_message.proto";
import "astarteplatform/msghub/astarte_type.proto";
import "astarteplatform/msghub/message_hub_error.proto";
import "astarteplatform/msghub/node.proto";

service MessageHub {
  /* This function should be used to attach a node to an instance of the Astarte message hub.
   * Returns a data stream from the Astarte message hub.
   */
  rpc Attach(Node) returns (stream AstarteMessageResult) {}
  /* This function should be used to send an `AstarteMessage` to Astarte. */
  rpc Send(AstarteMessage) returns (MessageHubResult){}
  /* This function should be used to detach a node from an instance of the Astarte message hub. */
  rpc Detach(Node) returns (MessageHubResult){}
}

/* MessageHubResult is a type of message for returning and propagating errors.
 * It is an enum with the variants, Empty(()), representing success and containing an empty value,
 * and MessageHubError(E) representing error and containing an error value.
 */
message MessageHubResult{
  oneof result {
    google.protobuf.Empty empty_message = 1;  // A message that contains an empty value for success response.
    MessageHubError hub_error = 2;            // A message that contains a specific Astarte Message Hub error.
  }
}
