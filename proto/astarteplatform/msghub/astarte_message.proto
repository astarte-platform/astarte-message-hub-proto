/*
 * This file is part of Astarte.
 *
 * Copyright 2022 SECO Mind Srl
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

syntax = "proto3";

package astarteplatform.msghub;

import "google/protobuf/timestamp.proto";

import "astarteplatform/msghub/astarte_data.proto";
import "astarteplatform/msghub/message_hub_error.proto";

/* MessageHubEvent is a type of message for returning and propagating errors.
* It is an enum with the variants, AstarteMessage(message), representing success and
* containing an astarte message value, and MessageHubError(E) representing error and
* containing an error value.
*/
message MessageHubEvent{
  oneof event {
    AstarteMessage message = 1;  // A message that contains data sent from Astarte.
    MessageHubError error = 2;   // A message that contains a specific Astarte Message Hub error.
  }
}

/* Astarte message to be used when sending data to Astarte. */
message AstarteMessage{
  string interface_name = 1;                        // Name of the interface to send data on.
  string path = 2;                                  // Endpoint to send the data on.
  oneof payload {                                   // Content of the message.
    AstarteDatastreamIndividual datastream_individual = 3; // An individual data type.
    AstarteDatastreamObject datastream_object = 4;          // An object data type.
    AstartePropertyIndividual property_individual = 5;      // A property data type.
  }
}
